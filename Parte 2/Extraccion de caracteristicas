{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Extraccion de caracteristicas","provenance":[],"authorship_tag":"ABX9TyMJF0iJotzwSz47Af3a/G1s"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"sk3Yp9zYLnF1"},"source":["## Imports\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vl_-oevdLdXJ","executionInfo":{"status":"ok","timestamp":1611172765060,"user_tz":300,"elapsed":12357,"user":{"displayName":"CYNTHIA GAVIRIA CASTANO","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi2IAEPBJpwJUFP1-byGUKZKvjpMTqMfDUis1q66fmyzdQdDC5FXzerv1nP15sD4dMHryWBfCZyWS9dGuz6dIv4as_E03FLp3S46-akcfn7NwmC9A1fn-iUlRqTUbYIjbdrnk1MKnUU0GoF4eYYKsMnjIVxfdQ-0ONl_OFnegCVeEX1qRM3aL1SJlp_rcpzxD9hc0l75Qq6ywSaZhBLDy9BLz30S2WmhEsqYDTdh_QQR1GCW8CKCQQrgN37VnL8sZusAKjasK2TbQUdvinuuwbqOcsr5PBuSRqhPvOKjNBOuBl0XMVSqWgqHjQQtutDM8VvPP5L-L6AQT6x2oqMyB4odPHikAp52HBb85_lyJkq4Pm8wX9-lCB4j2vFQtw0p8lskS0EOA9_ZuoRBFL5NRS2WAbfDgHfSD9ZAuajEgs9FAMqMljvtvTHeTwyRq0T37sRuSgiC2nWCZqwi5VLdjOV8lE9Ic_Jwmm_alScIeQh3MYM5-t_FdnyAx3_7ontKAA9a2d6nIpR2lPPUNauTxwMYGHdzttwUo69ugh5AN33MJivFzoTleXTHNRsOeaBmsnW5HpXx2si1uQlsvNy-37nFb5_aSakX6yGW5GSsW7Eg3dNYZtWQLU0LeS4TVahXk7X1dRu560-LUoAiPHN81Jz90hOQ-yCDXEg3gAa3-_mYKH8HFVfcDDwnYqoZfLwR4Uuh8bzrf_W865gaBU0Q2WacscA_QWbNcEjvgVFDuUVv-m-jd9MlTbuBByuHjO3Rk_LAwM=s64","userId":"10920454297490495827"}},"outputId":"ebd8cf8f-52e1-4c83-a59c-aeae160a1c00"},"source":["!pip install  scikit-learn==0.24\n","!pip install imbalanced-learn==0.7\n","\n","import numpy as np\n","import numpy as numpy\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","from sklearn import  preprocessing\n","from sklearn.model_selection import train_test_split ## Cross- validation\n","\n","from imblearn.over_sampling import SMOTE\n","from sklearn.model_selection import StratifiedKFold\n","from sklearn.utils import class_weight\n","from sklearn.discriminant_analysis import QuadraticDiscriminantAnalysis\n","from sklearn.metrics import classification_report,confusion_matrix,accuracy_score,roc_curve,auc\n","from sklearn.model_selection import cross_val_score\n","from sklearn.neighbors import KNeighborsClassifier\n","from sklearn.feature_selection import SequentialFeatureSelector\n","from prettytable import PrettyTable\n","from sklearn.metrics import accuracy_score, make_scorer\n","from sklearn.metrics import classification_report,confusion_matrix,accuracy_score,roc_curve,auc,roc_auc_score\n","from sklearn.metrics import precision_recall_curve\n","from sklearn.metrics import plot_precision_recall_curve\n","import matplotlib.pyplot as plt\n","from sklearn.metrics import average_precision_score\n","from sklearn.svm import SVC\n","from sklearn.ensemble import GradientBoostingClassifier\n","\n","from sklearn.neural_network import MLPClassifier\n","\n","from sklearn.metrics import f1_score\n","\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Collecting scikit-learn==0.24\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/30/aa/db462d385c56905b731403885454188683f63c86ea68900f6f7e7558b5fa/scikit_learn-0.24.0-cp36-cp36m-manylinux2010_x86_64.whl (22.2MB)\n","\u001b[K     |████████████████████████████████| 22.2MB 1.5MB/s \n","\u001b[?25hRequirement already satisfied: scipy>=0.19.1 in /usr/local/lib/python3.6/dist-packages (from scikit-learn==0.24) (1.4.1)\n","Requirement already satisfied: joblib>=0.11 in /usr/local/lib/python3.6/dist-packages (from scikit-learn==0.24) (1.0.0)\n","Requirement already satisfied: numpy>=1.13.3 in /usr/local/lib/python3.6/dist-packages (from scikit-learn==0.24) (1.19.5)\n","Collecting threadpoolctl>=2.0.0\n","  Downloading https://files.pythonhosted.org/packages/f7/12/ec3f2e203afa394a149911729357aa48affc59c20e2c1c8297a60f33f133/threadpoolctl-2.1.0-py3-none-any.whl\n","Installing collected packages: threadpoolctl, scikit-learn\n","  Found existing installation: scikit-learn 0.22.2.post1\n","    Uninstalling scikit-learn-0.22.2.post1:\n","      Successfully uninstalled scikit-learn-0.22.2.post1\n","Successfully installed scikit-learn-0.24.0 threadpoolctl-2.1.0\n","Collecting imbalanced-learn==0.7\n","\u001b[?25l  Downloading https://files.pythonhosted.org/packages/c8/81/8db4d87b03b998fda7c6f835d807c9ae4e3b141f978597b8d7f31600be15/imbalanced_learn-0.7.0-py3-none-any.whl (167kB)\n","\u001b[K     |████████████████████████████████| 174kB 7.0MB/s \n","\u001b[?25hRequirement already satisfied: scipy>=0.19.1 in /usr/local/lib/python3.6/dist-packages (from imbalanced-learn==0.7) (1.4.1)\n","Requirement already satisfied: scikit-learn>=0.23 in /usr/local/lib/python3.6/dist-packages (from imbalanced-learn==0.7) (0.24.0)\n","Requirement already satisfied: numpy>=1.13.3 in /usr/local/lib/python3.6/dist-packages (from imbalanced-learn==0.7) (1.19.5)\n","Requirement already satisfied: joblib>=0.11 in /usr/local/lib/python3.6/dist-packages (from imbalanced-learn==0.7) (1.0.0)\n","Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.6/dist-packages (from scikit-learn>=0.23->imbalanced-learn==0.7) (2.1.0)\n","Installing collected packages: imbalanced-learn\n","  Found existing installation: imbalanced-learn 0.4.3\n","    Uninstalling imbalanced-learn-0.4.3:\n","      Successfully uninstalled imbalanced-learn-0.4.3\n","Successfully installed imbalanced-learn-0.7.0\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"i7lGq2T5L-Fr"},"source":["#Data Preprocessing"]},{"cell_type":"markdown","metadata":{"id":"Wqy7HSGcMDru"},"source":["## Reading the dataset"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":204},"id":"roEhzBLuMJx9","executionInfo":{"status":"ok","timestamp":1611172765481,"user_tz":300,"elapsed":12757,"user":{"displayName":"CYNTHIA GAVIRIA CASTANO","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi2IAEPBJpwJUFP1-byGUKZKvjpMTqMfDUis1q66fmyzdQdDC5FXzerv1nP15sD4dMHryWBfCZyWS9dGuz6dIv4as_E03FLp3S46-akcfn7NwmC9A1fn-iUlRqTUbYIjbdrnk1MKnUU0GoF4eYYKsMnjIVxfdQ-0ONl_OFnegCVeEX1qRM3aL1SJlp_rcpzxD9hc0l75Qq6ywSaZhBLDy9BLz30S2WmhEsqYDTdh_QQR1GCW8CKCQQrgN37VnL8sZusAKjasK2TbQUdvinuuwbqOcsr5PBuSRqhPvOKjNBOuBl0XMVSqWgqHjQQtutDM8VvPP5L-L6AQT6x2oqMyB4odPHikAp52HBb85_lyJkq4Pm8wX9-lCB4j2vFQtw0p8lskS0EOA9_ZuoRBFL5NRS2WAbfDgHfSD9ZAuajEgs9FAMqMljvtvTHeTwyRq0T37sRuSgiC2nWCZqwi5VLdjOV8lE9Ic_Jwmm_alScIeQh3MYM5-t_FdnyAx3_7ontKAA9a2d6nIpR2lPPUNauTxwMYGHdzttwUo69ugh5AN33MJivFzoTleXTHNRsOeaBmsnW5HpXx2si1uQlsvNy-37nFb5_aSakX6yGW5GSsW7Eg3dNYZtWQLU0LeS4TVahXk7X1dRu560-LUoAiPHN81Jz90hOQ-yCDXEg3gAa3-_mYKH8HFVfcDDwnYqoZfLwR4Uuh8bzrf_W865gaBU0Q2WacscA_QWbNcEjvgVFDuUVv-m-jd9MlTbuBByuHjO3Rk_LAwM=s64","userId":"10920454297490495827"}},"outputId":"5a02cd81-f292-47a7-ee25-8b20ea80afd9"},"source":["df = pd.read_csv('https://archive.ics.uci.edu/ml/machine-learning-databases/00468/online_shoppers_intention.csv')\n","df.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Administrative</th>\n","      <th>Administrative_Duration</th>\n","      <th>Informational</th>\n","      <th>Informational_Duration</th>\n","      <th>ProductRelated</th>\n","      <th>ProductRelated_Duration</th>\n","      <th>BounceRates</th>\n","      <th>ExitRates</th>\n","      <th>PageValues</th>\n","      <th>SpecialDay</th>\n","      <th>Month</th>\n","      <th>OperatingSystems</th>\n","      <th>Browser</th>\n","      <th>Region</th>\n","      <th>TrafficType</th>\n","      <th>VisitorType</th>\n","      <th>Weekend</th>\n","      <th>Revenue</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0.000000</td>\n","      <td>0.20</td>\n","      <td>0.20</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>Feb</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Returning_Visitor</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>2</td>\n","      <td>64.000000</td>\n","      <td>0.00</td>\n","      <td>0.10</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>Feb</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>Returning_Visitor</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0.000000</td>\n","      <td>0.20</td>\n","      <td>0.20</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>Feb</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>9</td>\n","      <td>3</td>\n","      <td>Returning_Visitor</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>2</td>\n","      <td>2.666667</td>\n","      <td>0.05</td>\n","      <td>0.14</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>Feb</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>4</td>\n","      <td>Returning_Visitor</td>\n","      <td>False</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>10</td>\n","      <td>627.500000</td>\n","      <td>0.02</td>\n","      <td>0.05</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>Feb</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>Returning_Visitor</td>\n","      <td>True</td>\n","      <td>False</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   Administrative  Administrative_Duration  ...  Weekend  Revenue\n","0               0                      0.0  ...    False    False\n","1               0                      0.0  ...    False    False\n","2               0                      0.0  ...    False    False\n","3               0                      0.0  ...    False    False\n","4               0                      0.0  ...     True    False\n","\n","[5 rows x 18 columns]"]},"metadata":{"tags":[]},"execution_count":3}]},{"cell_type":"markdown","metadata":{"id":"f0jeCvFsMMOr"},"source":["## Transform data"]},{"cell_type":"code","metadata":{"id":"XoJCAgv1MQ5N"},"source":["from sklearn.preprocessing import LabelEncoder\n","lbenc=LabelEncoder()\n","df['Month']= lbenc.fit_transform(df['Month'])\n","df['VisitorType']= lbenc.fit_transform(df['VisitorType'])\n","\n","X = df.loc[:,df.columns!='Revenue'] #Independent Variables\n","Y = df.loc[:,'Revenue'] #Dependent Variable"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"oOPOzn5EMUBd"},"source":["## Normalization"]},{"cell_type":"code","metadata":{"id":"3GIozNkQMWXT"},"source":["X = (X - X.mean()) / (X.std())\n"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"QGZJv6nTMhKQ"},"source":["## Balanced"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hVSUW0ZQMsfS","executionInfo":{"status":"ok","timestamp":1611172765495,"user_tz":300,"elapsed":12743,"user":{"displayName":"CYNTHIA GAVIRIA CASTANO","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi2IAEPBJpwJUFP1-byGUKZKvjpMTqMfDUis1q66fmyzdQdDC5FXzerv1nP15sD4dMHryWBfCZyWS9dGuz6dIv4as_E03FLp3S46-akcfn7NwmC9A1fn-iUlRqTUbYIjbdrnk1MKnUU0GoF4eYYKsMnjIVxfdQ-0ONl_OFnegCVeEX1qRM3aL1SJlp_rcpzxD9hc0l75Qq6ywSaZhBLDy9BLz30S2WmhEsqYDTdh_QQR1GCW8CKCQQrgN37VnL8sZusAKjasK2TbQUdvinuuwbqOcsr5PBuSRqhPvOKjNBOuBl0XMVSqWgqHjQQtutDM8VvPP5L-L6AQT6x2oqMyB4odPHikAp52HBb85_lyJkq4Pm8wX9-lCB4j2vFQtw0p8lskS0EOA9_ZuoRBFL5NRS2WAbfDgHfSD9ZAuajEgs9FAMqMljvtvTHeTwyRq0T37sRuSgiC2nWCZqwi5VLdjOV8lE9Ic_Jwmm_alScIeQh3MYM5-t_FdnyAx3_7ontKAA9a2d6nIpR2lPPUNauTxwMYGHdzttwUo69ugh5AN33MJivFzoTleXTHNRsOeaBmsnW5HpXx2si1uQlsvNy-37nFb5_aSakX6yGW5GSsW7Eg3dNYZtWQLU0LeS4TVahXk7X1dRu560-LUoAiPHN81Jz90hOQ-yCDXEg3gAa3-_mYKH8HFVfcDDwnYqoZfLwR4Uuh8bzrf_W865gaBU0Q2WacscA_QWbNcEjvgVFDuUVv-m-jd9MlTbuBByuHjO3Rk_LAwM=s64","userId":"10920454297490495827"}},"outputId":"7548cc26-ec7a-45b8-ed35-3291124e802d"},"source":["VALID_SIZE = 0.30\n","\n","X_train, X_test, y_train, y_test = train_test_split(X,Y, test_size=VALID_SIZE, shuffle=True )\n","print('X_Train', X_train.shape)\n","print('y_train', y_train.shape)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["X_Train (8631, 17)\n","y_train (8631,)\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wP2Raj-NMmy4","executionInfo":{"status":"ok","timestamp":1611172765496,"user_tz":300,"elapsed":12736,"user":{"displayName":"CYNTHIA GAVIRIA CASTANO","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi2IAEPBJpwJUFP1-byGUKZKvjpMTqMfDUis1q66fmyzdQdDC5FXzerv1nP15sD4dMHryWBfCZyWS9dGuz6dIv4as_E03FLp3S46-akcfn7NwmC9A1fn-iUlRqTUbYIjbdrnk1MKnUU0GoF4eYYKsMnjIVxfdQ-0ONl_OFnegCVeEX1qRM3aL1SJlp_rcpzxD9hc0l75Qq6ywSaZhBLDy9BLz30S2WmhEsqYDTdh_QQR1GCW8CKCQQrgN37VnL8sZusAKjasK2TbQUdvinuuwbqOcsr5PBuSRqhPvOKjNBOuBl0XMVSqWgqHjQQtutDM8VvPP5L-L6AQT6x2oqMyB4odPHikAp52HBb85_lyJkq4Pm8wX9-lCB4j2vFQtw0p8lskS0EOA9_ZuoRBFL5NRS2WAbfDgHfSD9ZAuajEgs9FAMqMljvtvTHeTwyRq0T37sRuSgiC2nWCZqwi5VLdjOV8lE9Ic_Jwmm_alScIeQh3MYM5-t_FdnyAx3_7ontKAA9a2d6nIpR2lPPUNauTxwMYGHdzttwUo69ugh5AN33MJivFzoTleXTHNRsOeaBmsnW5HpXx2si1uQlsvNy-37nFb5_aSakX6yGW5GSsW7Eg3dNYZtWQLU0LeS4TVahXk7X1dRu560-LUoAiPHN81Jz90hOQ-yCDXEg3gAa3-_mYKH8HFVfcDDwnYqoZfLwR4Uuh8bzrf_W865gaBU0Q2WacscA_QWbNcEjvgVFDuUVv-m-jd9MlTbuBByuHjO3Rk_LAwM=s64","userId":"10920454297490495827"}},"outputId":"f72fe584-7baf-4c7f-9708-365ccd5c15a3"},"source":["sm = SMOTE( sampling_strategy= 0.5)\n","\n","XS_train, ys_train = sm.fit_sample(X_train, y_train)\n","XS_test, ys_test = X_test, y_test\n","\n","print('X_Train' + str(X_train.shape) + '--> XS_train ' +  str(XS_train.shape))\n","print('y_train'+ str(y_train.shape) + '-->  ys_train ' +  str(ys_train.shape))\n","\n","print(\"Muestras por clase \")\n","\n","print('Clase 0 ' + str(len(ys_train[(ys_train == 0)])))\n","print('Clase 1 ' + str(len(ys_train[(ys_train  == 1)])))"],"execution_count":null,"outputs":[{"output_type":"stream","text":["X_Train(8631, 17)--> XS_train (10972, 17)\n","y_train(8631,)-->  ys_train (10972,)\n","Muestras por clase \n","Clase 0 7315\n","Clase 1 3657\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"WefTBVKvYFUM"},"source":["# Seleccion de caracteristicas\n"]},{"cell_type":"markdown","metadata":{"id":"zC9Pci2PYI4T"},"source":["## Extraccion de Caracteristicas (PCA)"]},{"cell_type":"markdown","metadata":{"id":"mMs8qlemqc34"},"source":["### 1. Maquina de soporte vectorial"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vj2QoTPgq2lW","executionInfo":{"status":"ok","timestamp":1611172860373,"user_tz":300,"elapsed":107604,"user":{"displayName":"CYNTHIA GAVIRIA CASTANO","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi2IAEPBJpwJUFP1-byGUKZKvjpMTqMfDUis1q66fmyzdQdDC5FXzerv1nP15sD4dMHryWBfCZyWS9dGuz6dIv4as_E03FLp3S46-akcfn7NwmC9A1fn-iUlRqTUbYIjbdrnk1MKnUU0GoF4eYYKsMnjIVxfdQ-0ONl_OFnegCVeEX1qRM3aL1SJlp_rcpzxD9hc0l75Qq6ywSaZhBLDy9BLz30S2WmhEsqYDTdh_QQR1GCW8CKCQQrgN37VnL8sZusAKjasK2TbQUdvinuuwbqOcsr5PBuSRqhPvOKjNBOuBl0XMVSqWgqHjQQtutDM8VvPP5L-L6AQT6x2oqMyB4odPHikAp52HBb85_lyJkq4Pm8wX9-lCB4j2vFQtw0p8lskS0EOA9_ZuoRBFL5NRS2WAbfDgHfSD9ZAuajEgs9FAMqMljvtvTHeTwyRq0T37sRuSgiC2nWCZqwi5VLdjOV8lE9Ic_Jwmm_alScIeQh3MYM5-t_FdnyAx3_7ontKAA9a2d6nIpR2lPPUNauTxwMYGHdzttwUo69ugh5AN33MJivFzoTleXTHNRsOeaBmsnW5HpXx2si1uQlsvNy-37nFb5_aSakX6yGW5GSsW7Eg3dNYZtWQLU0LeS4TVahXk7X1dRu560-LUoAiPHN81Jz90hOQ-yCDXEg3gAa3-_mYKH8HFVfcDDwnYqoZfLwR4Uuh8bzrf_W865gaBU0Q2WacscA_QWbNcEjvgVFDuUVv-m-jd9MlTbuBByuHjO3Rk_LAwM=s64","userId":"10920454297490495827"}},"outputId":"83f952bc-3f8b-4070-f402-76e6032fb118"},"source":["from sklearn.decomposition import PCA\n","\n","model = SVC(C = 1, gamma = 0.01 , kernel = 'rbf', probability=True)\n","caracteristicas = [6,9,12,15]\n","table = PrettyTable(['Caracteristicas', 'Training Score', 'Testing Score', 'Acurracy', 'f1 Score', 'AUC'])\n","\n","for i in caracteristicas: \n","  pca = PCA(n_components=i)\n","  pca.fit(XS_train)\n","  selected = pca.transform(XS_train)\n","  tested = pca.transform(XS_test)\n","  model.fit(selected, ys_train)\n","  preds = model.predict(tested)\n","  predicting_probabilites = model.predict_proba(tested)[:,1]\n","  precision,recall,thresholds = precision_recall_curve(ys_test, predicting_probabilites)\n","  c_auc = auc(recall, precision)\n","  table.add_row([i,model.score(selected, ys_train),model.score(tested, ys_test),accuracy_score(y_true = ys_test, y_pred = preds), f1_score(y_true = ys_test, y_pred = preds), c_auc])\n","  print('Finalizo ------> ' + str(i))\n","print(table)\n","\n","\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Finalizo ------> 6\n","Finalizo ------> 9\n","Finalizo ------> 12\n","Finalizo ------> 15\n","+-----------------+--------------------+--------------------+--------------------+--------------------+--------------------+\n","| Caracteristicas |   Training Score   |   Testing Score    |      Acurracy      |      f1 Score      |        AUC         |\n","+-----------------+--------------------+--------------------+--------------------+--------------------+--------------------+\n","|        6        | 0.8399562522785271 | 0.8805082454717491 | 0.8805082454717491 | 0.6222222222222223 | 0.6448360183472535 |\n","|        9        | 0.8454247174626321 | 0.8821303054879697 | 0.8821303054879697 | 0.629251700680272  | 0.6499572966152287 |\n","|        12       | 0.8472475391906672 | 0.8824006488240065 | 0.8824006488240065 | 0.6329113924050633 | 0.6557677264364582 |\n","|        15       | 0.8486146554866933 | 0.8826709921600433 | 0.8826709921600433 | 0.6365159128978224 | 0.6562256775470039 |\n","+-----------------+--------------------+--------------------+--------------------+--------------------+--------------------+\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"ZS0Ro_KwqmNT"},"source":["### 2. Redes Neuronales Artificiales"]},{"cell_type":"code","metadata":{"id":"w5z0MFiWYguf","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1611172891738,"user_tz":300,"elapsed":138961,"user":{"displayName":"CYNTHIA GAVIRIA CASTANO","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi2IAEPBJpwJUFP1-byGUKZKvjpMTqMfDUis1q66fmyzdQdDC5FXzerv1nP15sD4dMHryWBfCZyWS9dGuz6dIv4as_E03FLp3S46-akcfn7NwmC9A1fn-iUlRqTUbYIjbdrnk1MKnUU0GoF4eYYKsMnjIVxfdQ-0ONl_OFnegCVeEX1qRM3aL1SJlp_rcpzxD9hc0l75Qq6ywSaZhBLDy9BLz30S2WmhEsqYDTdh_QQR1GCW8CKCQQrgN37VnL8sZusAKjasK2TbQUdvinuuwbqOcsr5PBuSRqhPvOKjNBOuBl0XMVSqWgqHjQQtutDM8VvPP5L-L6AQT6x2oqMyB4odPHikAp52HBb85_lyJkq4Pm8wX9-lCB4j2vFQtw0p8lskS0EOA9_ZuoRBFL5NRS2WAbfDgHfSD9ZAuajEgs9FAMqMljvtvTHeTwyRq0T37sRuSgiC2nWCZqwi5VLdjOV8lE9Ic_Jwmm_alScIeQh3MYM5-t_FdnyAx3_7ontKAA9a2d6nIpR2lPPUNauTxwMYGHdzttwUo69ugh5AN33MJivFzoTleXTHNRsOeaBmsnW5HpXx2si1uQlsvNy-37nFb5_aSakX6yGW5GSsW7Eg3dNYZtWQLU0LeS4TVahXk7X1dRu560-LUoAiPHN81Jz90hOQ-yCDXEg3gAa3-_mYKH8HFVfcDDwnYqoZfLwR4Uuh8bzrf_W865gaBU0Q2WacscA_QWbNcEjvgVFDuUVv-m-jd9MlTbuBByuHjO3Rk_LAwM=s64","userId":"10920454297490495827"}},"outputId":"f4922256-16fb-45bc-ec81-62b93f1afcf0"},"source":["model = MLPClassifier(hidden_layer_sizes=(40,), activation='logistic', alpha=0.001)\n","caracteristicas = [6,9,12,15]\n","table = PrettyTable(['Caracteristicas', 'Training Score', 'Testing Score', 'Acurracy', 'f1 Score', 'AUC'])\n","\n","for i in caracteristicas: \n","  pca = PCA(n_components=i)\n","  pca.fit(XS_train)\n","  selected = pca.transform(XS_train)\n","  tested = pca.transform(XS_test)\n","  model.fit(selected, ys_train)\n","  preds = model.predict(tested)\n","  predicting_probabilites = model.predict_proba(tested)[:,1]\n","  precision,recall,thresholds = precision_recall_curve(ys_test, predicting_probabilites)\n","  c_auc = auc(recall, precision)\n","  table.add_row([i,model.score(selected, ys_train),model.score(tested, ys_test),accuracy_score(y_true = ys_test, y_pred = preds), f1_score(y_true = ys_test, y_pred = preds), c_auc])\n","  print('Finalizo ------> ' + str(i))\n","print(table)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:617: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (200) reached and the optimization hasn't converged yet.\n","  % self.max_iter, ConvergenceWarning)\n"],"name":"stderr"},{"output_type":"stream","text":["Finalizo ------> 6\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:617: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (200) reached and the optimization hasn't converged yet.\n","  % self.max_iter, ConvergenceWarning)\n"],"name":"stderr"},{"output_type":"stream","text":["Finalizo ------> 9\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:617: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (200) reached and the optimization hasn't converged yet.\n","  % self.max_iter, ConvergenceWarning)\n"],"name":"stderr"},{"output_type":"stream","text":["Finalizo ------> 12\n","Finalizo ------> 15\n","+-----------------+--------------------+--------------------+--------------------+--------------------+--------------------+\n","| Caracteristicas |   Training Score   |   Testing Score    |      Acurracy      |      f1 Score      |        AUC         |\n","+-----------------+--------------------+--------------------+--------------------+--------------------+--------------------+\n","|        6        | 0.8573641997812614 | 0.8772641254393079 | 0.8772641254393079 | 0.6486068111455108 | 0.6622480508963344 |\n","|        9        | 0.8676631425446591 | 0.8729386320627196 | 0.8729386320627196 | 0.6423135464231354 | 0.6799837866910629 |\n","|        12       | 0.8695771053590958 | 0.8775344687753447 | 0.8775344687753447 | 0.6534047436878347 | 0.6773647232175577 |\n","|        15       | 0.8715822092599343 | 0.8799675587996756 | 0.8799675587996756 |  0.65527950310559  |  0.68310281812166  |\n","+-----------------+--------------------+--------------------+--------------------+--------------------+--------------------+\n"],"name":"stdout"},{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/sklearn/neural_network/_multilayer_perceptron.py:617: ConvergenceWarning: Stochastic Optimizer: Maximum iterations (200) reached and the optimization hasn't converged yet.\n","  % self.max_iter, ConvergenceWarning)\n"],"name":"stderr"}]},{"cell_type":"markdown","metadata":{"id":"atAQzkX0qrjW"},"source":["### 3. Gradient Boosting Tree"]},{"cell_type":"code","metadata":{"id":"MeIP8x1dYf2g","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1611172901688,"user_tz":300,"elapsed":148903,"user":{"displayName":"CYNTHIA GAVIRIA CASTANO","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14Gi2IAEPBJpwJUFP1-byGUKZKvjpMTqMfDUis1q66fmyzdQdDC5FXzerv1nP15sD4dMHryWBfCZyWS9dGuz6dIv4as_E03FLp3S46-akcfn7NwmC9A1fn-iUlRqTUbYIjbdrnk1MKnUU0GoF4eYYKsMnjIVxfdQ-0ONl_OFnegCVeEX1qRM3aL1SJlp_rcpzxD9hc0l75Qq6ywSaZhBLDy9BLz30S2WmhEsqYDTdh_QQR1GCW8CKCQQrgN37VnL8sZusAKjasK2TbQUdvinuuwbqOcsr5PBuSRqhPvOKjNBOuBl0XMVSqWgqHjQQtutDM8VvPP5L-L6AQT6x2oqMyB4odPHikAp52HBb85_lyJkq4Pm8wX9-lCB4j2vFQtw0p8lskS0EOA9_ZuoRBFL5NRS2WAbfDgHfSD9ZAuajEgs9FAMqMljvtvTHeTwyRq0T37sRuSgiC2nWCZqwi5VLdjOV8lE9Ic_Jwmm_alScIeQh3MYM5-t_FdnyAx3_7ontKAA9a2d6nIpR2lPPUNauTxwMYGHdzttwUo69ugh5AN33MJivFzoTleXTHNRsOeaBmsnW5HpXx2si1uQlsvNy-37nFb5_aSakX6yGW5GSsW7Eg3dNYZtWQLU0LeS4TVahXk7X1dRu560-LUoAiPHN81Jz90hOQ-yCDXEg3gAa3-_mYKH8HFVfcDDwnYqoZfLwR4Uuh8bzrf_W865gaBU0Q2WacscA_QWbNcEjvgVFDuUVv-m-jd9MlTbuBByuHjO3Rk_LAwM=s64","userId":"10920454297490495827"}},"outputId":"4aad32ff-da61-440f-d761-a32f99ee6eca"},"source":["model = GradientBoostingClassifier(n_estimators=60 , max_depth=3)\n","caracteristicas = [6,9,12,15]\n","table = PrettyTable(['Caracteristicas', 'Training Score', 'Testing Score', 'Acurracy', 'f1 Score', 'AUC'])\n","\n","for i in caracteristicas: \n","  pca = PCA(n_components=i)\n","  pca.fit(XS_train)\n","  selected = pca.transform(XS_train)\n","  tested = pca.transform(XS_test)\n","  model.fit(selected, ys_train)\n","  preds = model.predict(tested)\n","  predicting_probabilites = model.predict_proba(tested)[:,1]\n","  precision,recall,thresholds = precision_recall_curve(ys_test, predicting_probabilites)\n","  c_auc = auc(recall, precision)\n","  table.add_row([i,model.score(selected, ys_train),model.score(tested, ys_test),accuracy_score(y_true = ys_test, y_pred = preds), f1_score(y_true = ys_test, y_pred = preds), c_auc])\n","  print('Finalizo ------> ' + str(i))\n","print(table)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Finalizo ------> 6\n","Finalizo ------> 9\n","Finalizo ------> 12\n","Finalizo ------> 15\n","+-----------------+--------------------+--------------------+--------------------+--------------------+--------------------+\n","| Caracteristicas |   Training Score   |   Testing Score    |      Acurracy      |      f1 Score      |        AUC         |\n","+-----------------+--------------------+--------------------+--------------------+--------------------+--------------------+\n","|        6        | 0.8566350710900474 | 0.8796972154636388 | 0.8796972154636388 | 0.6263643996641477 | 0.642436427361071  |\n","|        9        | 0.8593693036820998 | 0.8778048121113815 | 0.8778048121113815 | 0.6188870151770658 | 0.6469198246782591 |\n","|        12       | 0.8597338680277069 | 0.881859962151933  | 0.881859962151933  | 0.6324642556770395 | 0.6385578853377336 |\n","|        15       | 0.8589135982500912 | 0.881859962151933  | 0.881859962151933  | 0.6293469041560645 | 0.6381043696064749 |\n","+-----------------+--------------------+--------------------+--------------------+--------------------+--------------------+\n"],"name":"stdout"}]}]}